/*
 Stepper Motor Control - one revolution

 This program drives a bipolar NC-17 stepper motor.

 Created 11 Mar. 2007
 Modified 30 Nov. 2009
 by Tom Igoe, modified by Mike Xanders 1/28/2017 - I added the ability to remotely control the stepper motor and micro-stepped
 it to smooth out the rotatation for picture/video
 */

#include <Adafruit_MotorShield.h>
#include <IRremote.h>
#include "utility/Adafruit_MS_PWMServoDriver.h"
#include <Wire.h>
// Create the motor shield object with the default I2C address
Adafruit_MotorShield AFMS = Adafruit_MotorShield(); 
// Or, create it with a different I2C address (say for stacking)
// Adafruit_MotorShield AFMS = Adafruit_MotorShield(0x61); 
const int irReceiverPin = 13;
IRrecv irrecv(irReceiverPin);
decode_results results;
// Connect a stepper motor with 200 steps per revolution (1.8 degree)
// to motor port #2 (M3 and M4)
Adafruit_StepperMotor *myMotor = AFMS.getStepper(200, 2);

void setup() {

  // initialize the serial port:
  Serial.begin(9600);
  irrecv.enableIRIn(); 
  AFMS.begin(1000);  // create with the default frequency 1.6KHz
  //AFMS.begin(1000);  // OR with a different frequency, say 1KHz
  myMotor->setSpeed(10);  // 10 rpm  
}

void loop() {
  
  if (irrecv.decode(&results))
  {
    switch(results.value)
    {
      case 0xFFC23D: //set remote button code, in this case it was the play button which uses the code 0xFFC23D
      Serial.println("clockwise");
            myMotor->step(207, BACKWARD, MICROSTEP);//I went 207 instead of 200 so that the motor would go through a full 360Â° to capture complete panoramic pictures. Microstep reduces the stops between steps so it is smooth
           
           delay(500);
        break;      
    }
irrecv.resume();
  }
}
